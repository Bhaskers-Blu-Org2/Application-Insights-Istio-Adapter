// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: policy/v1beta1/type.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Istio.Policy.V1Beta1 {

  /// <summary>Holder for reflection information generated from policy/v1beta1/type.proto</summary>
  public static partial class TypeReflection {

    #region Descriptor
    /// <summary>File descriptor for policy/v1beta1/type.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chlwb2xpY3kvdjFiZXRhMS90eXBlLnByb3RvEhRpc3Rpby5wb2xpY3kudjFi",
            "ZXRhMRoeZ29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9uLnByb3RvGh9nb29nbGUv",
            "cHJvdG9idWYvdGltZXN0YW1wLnByb3RvIswDCgVWYWx1ZRIWCgxzdHJpbmdf",
            "dmFsdWUYASABKAlIABIVCgtpbnQ2NF92YWx1ZRgCIAEoA0gAEhYKDGRvdWJs",
            "ZV92YWx1ZRgDIAEoAUgAEhQKCmJvb2xfdmFsdWUYBCABKAhIABI7ChBpcF9h",
            "ZGRyZXNzX3ZhbHVlGAUgASgLMh8uaXN0aW8ucG9saWN5LnYxYmV0YTEuSVBB",
            "ZGRyZXNzSAASOgoPdGltZXN0YW1wX3ZhbHVlGAYgASgLMh8uaXN0aW8ucG9s",
            "aWN5LnYxYmV0YTEuVGltZVN0YW1wSAASOAoOZHVyYXRpb25fdmFsdWUYByAB",
            "KAsyHi5pc3Rpby5wb2xpY3kudjFiZXRhMS5EdXJhdGlvbkgAEkEKE2VtYWls",
            "X2FkZHJlc3NfdmFsdWUYCCABKAsyIi5pc3Rpby5wb2xpY3kudjFiZXRhMS5F",
            "bWFpbEFkZHJlc3NIABI3Cg5kbnNfbmFtZV92YWx1ZRgJIAEoCzIdLmlzdGlv",
            "LnBvbGljeS52MWJldGExLkROU05hbWVIABIuCgl1cmlfdmFsdWUYCiABKAsy",
            "GS5pc3Rpby5wb2xpY3kudjFiZXRhMS5VcmlIAEIHCgV2YWx1ZSIaCglJUEFk",
            "ZHJlc3MSDQoFdmFsdWUYASABKAwiNAoIRHVyYXRpb24SKAoFdmFsdWUYASAB",
            "KAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24iNgoJVGltZVN0YW1wEikK",
            "BXZhbHVlGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCIYCgdE",
            "TlNOYW1lEg0KBXZhbHVlGAEgASgJIh0KDEVtYWlsQWRkcmVzcxINCgV2YWx1",
            "ZRgBIAEoCSIUCgNVcmkSDQoFdmFsdWUYASABKAlCHVobaXN0aW8uaW8vYXBp",
            "L3BvbGljeS92MWJldGExYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Istio.Policy.V1Beta1.Value), global::Istio.Policy.V1Beta1.Value.Parser, new[]{ "StringValue", "Int64Value", "DoubleValue", "BoolValue", "IpAddressValue", "TimestampValue", "DurationValue", "EmailAddressValue", "DnsNameValue", "UriValue" }, new[]{ "Value" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Istio.Policy.V1Beta1.IPAddress), global::Istio.Policy.V1Beta1.IPAddress.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Istio.Policy.V1Beta1.Duration), global::Istio.Policy.V1Beta1.Duration.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Istio.Policy.V1Beta1.TimeStamp), global::Istio.Policy.V1Beta1.TimeStamp.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Istio.Policy.V1Beta1.DNSName), global::Istio.Policy.V1Beta1.DNSName.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Istio.Policy.V1Beta1.EmailAddress), global::Istio.Policy.V1Beta1.EmailAddress.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Istio.Policy.V1Beta1.Uri), global::Istio.Policy.V1Beta1.Uri.Parser, new[]{ "Value" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// An instance field of type Value denotes that the expression for the field is of dynamic type and can evalaute to any
  /// [ValueType][istio.policy.v1beta1.ValueType] enum values. For example, when
  /// authoring an instance configuration for a template that has a field `data` of type `istio.policy.v1beta1.Value`,
  /// both of the following expressions are valid `data: source.ip | ip("0.0.0.0")`, `data: request.id | ""`;
  /// the resulting type is either ValueType.IP_ADDRESS or ValueType.STRING for the two cases respectively.
  ///
  /// Objects of type Value are also passed to the adapters during request-time. There is a 1:1 mapping between
  /// oneof fields in `Value` and enum values inside `ValueType`. Depending on the expression's evaluated `ValueType`,
  /// the equivalent oneof field in `Value` is populated by Mixer and passed to the adapters.
  /// </summary>
  public sealed partial class Value : pb::IMessage<Value> {
    private static readonly pb::MessageParser<Value> _parser = new pb::MessageParser<Value>(() => new Value());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Value> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Istio.Policy.V1Beta1.TypeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Value() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Value(Value other) : this() {
      switch (other.ValueCase) {
        case ValueOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
        case ValueOneofCase.Int64Value:
          Int64Value = other.Int64Value;
          break;
        case ValueOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
        case ValueOneofCase.BoolValue:
          BoolValue = other.BoolValue;
          break;
        case ValueOneofCase.IpAddressValue:
          IpAddressValue = other.IpAddressValue.Clone();
          break;
        case ValueOneofCase.TimestampValue:
          TimestampValue = other.TimestampValue.Clone();
          break;
        case ValueOneofCase.DurationValue:
          DurationValue = other.DurationValue.Clone();
          break;
        case ValueOneofCase.EmailAddressValue:
          EmailAddressValue = other.EmailAddressValue.Clone();
          break;
        case ValueOneofCase.DnsNameValue:
          DnsNameValue = other.DnsNameValue.Clone();
          break;
        case ValueOneofCase.UriValue:
          UriValue = other.UriValue.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Value Clone() {
      return new Value(this);
    }

    /// <summary>Field number for the "string_value" field.</summary>
    public const int StringValueFieldNumber = 1;
    /// <summary>
    /// Used for values of type STRING
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringValue {
      get { return valueCase_ == ValueOneofCase.StringValue ? (string) value_ : ""; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueCase_ = ValueOneofCase.StringValue;
      }
    }

    /// <summary>Field number for the "int64_value" field.</summary>
    public const int Int64ValueFieldNumber = 2;
    /// <summary>
    /// Used for values of type INT64
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Int64Value {
      get { return valueCase_ == ValueOneofCase.Int64Value ? (long) value_ : 0L; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.Int64Value;
      }
    }

    /// <summary>Field number for the "double_value" field.</summary>
    public const int DoubleValueFieldNumber = 3;
    /// <summary>
    /// Used for values of type DOUBLE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DoubleValue {
      get { return valueCase_ == ValueOneofCase.DoubleValue ? (double) value_ : 0D; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.DoubleValue;
      }
    }

    /// <summary>Field number for the "bool_value" field.</summary>
    public const int BoolValueFieldNumber = 4;
    /// <summary>
    /// Used for values of type BOOL
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BoolValue {
      get { return valueCase_ == ValueOneofCase.BoolValue ? (bool) value_ : false; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.BoolValue;
      }
    }

    /// <summary>Field number for the "ip_address_value" field.</summary>
    public const int IpAddressValueFieldNumber = 5;
    /// <summary>
    /// Used for values of type IPAddress
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Istio.Policy.V1Beta1.IPAddress IpAddressValue {
      get { return valueCase_ == ValueOneofCase.IpAddressValue ? (global::Istio.Policy.V1Beta1.IPAddress) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.IpAddressValue;
      }
    }

    /// <summary>Field number for the "timestamp_value" field.</summary>
    public const int TimestampValueFieldNumber = 6;
    /// <summary>
    /// Used for values of type TIMESTAMP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Istio.Policy.V1Beta1.TimeStamp TimestampValue {
      get { return valueCase_ == ValueOneofCase.TimestampValue ? (global::Istio.Policy.V1Beta1.TimeStamp) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.TimestampValue;
      }
    }

    /// <summary>Field number for the "duration_value" field.</summary>
    public const int DurationValueFieldNumber = 7;
    /// <summary>
    /// Used for values of type DURATION
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Istio.Policy.V1Beta1.Duration DurationValue {
      get { return valueCase_ == ValueOneofCase.DurationValue ? (global::Istio.Policy.V1Beta1.Duration) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.DurationValue;
      }
    }

    /// <summary>Field number for the "email_address_value" field.</summary>
    public const int EmailAddressValueFieldNumber = 8;
    /// <summary>
    /// Used for values of type EmailAddress
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Istio.Policy.V1Beta1.EmailAddress EmailAddressValue {
      get { return valueCase_ == ValueOneofCase.EmailAddressValue ? (global::Istio.Policy.V1Beta1.EmailAddress) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.EmailAddressValue;
      }
    }

    /// <summary>Field number for the "dns_name_value" field.</summary>
    public const int DnsNameValueFieldNumber = 9;
    /// <summary>
    /// Used for values of type DNSName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Istio.Policy.V1Beta1.DNSName DnsNameValue {
      get { return valueCase_ == ValueOneofCase.DnsNameValue ? (global::Istio.Policy.V1Beta1.DNSName) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.DnsNameValue;
      }
    }

    /// <summary>Field number for the "uri_value" field.</summary>
    public const int UriValueFieldNumber = 10;
    /// <summary>
    /// Used for values of type Uri
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Istio.Policy.V1Beta1.Uri UriValue {
      get { return valueCase_ == ValueOneofCase.UriValue ? (global::Istio.Policy.V1Beta1.Uri) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.UriValue;
      }
    }

    private object value_;
    /// <summary>Enum of possible cases for the "value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      StringValue = 1,
      Int64Value = 2,
      DoubleValue = 3,
      BoolValue = 4,
      IpAddressValue = 5,
      TimestampValue = 6,
      DurationValue = 7,
      EmailAddressValue = 8,
      DnsNameValue = 9,
      UriValue = 10,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Value);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Value other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StringValue != other.StringValue) return false;
      if (Int64Value != other.Int64Value) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
      if (BoolValue != other.BoolValue) return false;
      if (!object.Equals(IpAddressValue, other.IpAddressValue)) return false;
      if (!object.Equals(TimestampValue, other.TimestampValue)) return false;
      if (!object.Equals(DurationValue, other.DurationValue)) return false;
      if (!object.Equals(EmailAddressValue, other.EmailAddressValue)) return false;
      if (!object.Equals(DnsNameValue, other.DnsNameValue)) return false;
      if (!object.Equals(UriValue, other.UriValue)) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (valueCase_ == ValueOneofCase.StringValue) hash ^= StringValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.Int64Value) hash ^= Int64Value.GetHashCode();
      if (valueCase_ == ValueOneofCase.DoubleValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleValue);
      if (valueCase_ == ValueOneofCase.BoolValue) hash ^= BoolValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.IpAddressValue) hash ^= IpAddressValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.TimestampValue) hash ^= TimestampValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.DurationValue) hash ^= DurationValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.EmailAddressValue) hash ^= EmailAddressValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.DnsNameValue) hash ^= DnsNameValue.GetHashCode();
      if (valueCase_ == ValueOneofCase.UriValue) hash ^= UriValue.GetHashCode();
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (valueCase_ == ValueOneofCase.StringValue) {
        output.WriteRawTag(10);
        output.WriteString(StringValue);
      }
      if (valueCase_ == ValueOneofCase.Int64Value) {
        output.WriteRawTag(16);
        output.WriteInt64(Int64Value);
      }
      if (valueCase_ == ValueOneofCase.DoubleValue) {
        output.WriteRawTag(25);
        output.WriteDouble(DoubleValue);
      }
      if (valueCase_ == ValueOneofCase.BoolValue) {
        output.WriteRawTag(32);
        output.WriteBool(BoolValue);
      }
      if (valueCase_ == ValueOneofCase.IpAddressValue) {
        output.WriteRawTag(42);
        output.WriteMessage(IpAddressValue);
      }
      if (valueCase_ == ValueOneofCase.TimestampValue) {
        output.WriteRawTag(50);
        output.WriteMessage(TimestampValue);
      }
      if (valueCase_ == ValueOneofCase.DurationValue) {
        output.WriteRawTag(58);
        output.WriteMessage(DurationValue);
      }
      if (valueCase_ == ValueOneofCase.EmailAddressValue) {
        output.WriteRawTag(66);
        output.WriteMessage(EmailAddressValue);
      }
      if (valueCase_ == ValueOneofCase.DnsNameValue) {
        output.WriteRawTag(74);
        output.WriteMessage(DnsNameValue);
      }
      if (valueCase_ == ValueOneofCase.UriValue) {
        output.WriteRawTag(82);
        output.WriteMessage(UriValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (valueCase_ == ValueOneofCase.StringValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
      }
      if (valueCase_ == ValueOneofCase.Int64Value) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Int64Value);
      }
      if (valueCase_ == ValueOneofCase.DoubleValue) {
        size += 1 + 8;
      }
      if (valueCase_ == ValueOneofCase.BoolValue) {
        size += 1 + 1;
      }
      if (valueCase_ == ValueOneofCase.IpAddressValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IpAddressValue);
      }
      if (valueCase_ == ValueOneofCase.TimestampValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimestampValue);
      }
      if (valueCase_ == ValueOneofCase.DurationValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DurationValue);
      }
      if (valueCase_ == ValueOneofCase.EmailAddressValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EmailAddressValue);
      }
      if (valueCase_ == ValueOneofCase.DnsNameValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DnsNameValue);
      }
      if (valueCase_ == ValueOneofCase.UriValue) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UriValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Value other) {
      if (other == null) {
        return;
      }
      switch (other.ValueCase) {
        case ValueOneofCase.StringValue:
          StringValue = other.StringValue;
          break;
        case ValueOneofCase.Int64Value:
          Int64Value = other.Int64Value;
          break;
        case ValueOneofCase.DoubleValue:
          DoubleValue = other.DoubleValue;
          break;
        case ValueOneofCase.BoolValue:
          BoolValue = other.BoolValue;
          break;
        case ValueOneofCase.IpAddressValue:
          if (IpAddressValue == null) {
            IpAddressValue = new global::Istio.Policy.V1Beta1.IPAddress();
          }
          IpAddressValue.MergeFrom(other.IpAddressValue);
          break;
        case ValueOneofCase.TimestampValue:
          if (TimestampValue == null) {
            TimestampValue = new global::Istio.Policy.V1Beta1.TimeStamp();
          }
          TimestampValue.MergeFrom(other.TimestampValue);
          break;
        case ValueOneofCase.DurationValue:
          if (DurationValue == null) {
            DurationValue = new global::Istio.Policy.V1Beta1.Duration();
          }
          DurationValue.MergeFrom(other.DurationValue);
          break;
        case ValueOneofCase.EmailAddressValue:
          if (EmailAddressValue == null) {
            EmailAddressValue = new global::Istio.Policy.V1Beta1.EmailAddress();
          }
          EmailAddressValue.MergeFrom(other.EmailAddressValue);
          break;
        case ValueOneofCase.DnsNameValue:
          if (DnsNameValue == null) {
            DnsNameValue = new global::Istio.Policy.V1Beta1.DNSName();
          }
          DnsNameValue.MergeFrom(other.DnsNameValue);
          break;
        case ValueOneofCase.UriValue:
          if (UriValue == null) {
            UriValue = new global::Istio.Policy.V1Beta1.Uri();
          }
          UriValue.MergeFrom(other.UriValue);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StringValue = input.ReadString();
            break;
          }
          case 16: {
            Int64Value = input.ReadInt64();
            break;
          }
          case 25: {
            DoubleValue = input.ReadDouble();
            break;
          }
          case 32: {
            BoolValue = input.ReadBool();
            break;
          }
          case 42: {
            global::Istio.Policy.V1Beta1.IPAddress subBuilder = new global::Istio.Policy.V1Beta1.IPAddress();
            if (valueCase_ == ValueOneofCase.IpAddressValue) {
              subBuilder.MergeFrom(IpAddressValue);
            }
            input.ReadMessage(subBuilder);
            IpAddressValue = subBuilder;
            break;
          }
          case 50: {
            global::Istio.Policy.V1Beta1.TimeStamp subBuilder = new global::Istio.Policy.V1Beta1.TimeStamp();
            if (valueCase_ == ValueOneofCase.TimestampValue) {
              subBuilder.MergeFrom(TimestampValue);
            }
            input.ReadMessage(subBuilder);
            TimestampValue = subBuilder;
            break;
          }
          case 58: {
            global::Istio.Policy.V1Beta1.Duration subBuilder = new global::Istio.Policy.V1Beta1.Duration();
            if (valueCase_ == ValueOneofCase.DurationValue) {
              subBuilder.MergeFrom(DurationValue);
            }
            input.ReadMessage(subBuilder);
            DurationValue = subBuilder;
            break;
          }
          case 66: {
            global::Istio.Policy.V1Beta1.EmailAddress subBuilder = new global::Istio.Policy.V1Beta1.EmailAddress();
            if (valueCase_ == ValueOneofCase.EmailAddressValue) {
              subBuilder.MergeFrom(EmailAddressValue);
            }
            input.ReadMessage(subBuilder);
            EmailAddressValue = subBuilder;
            break;
          }
          case 74: {
            global::Istio.Policy.V1Beta1.DNSName subBuilder = new global::Istio.Policy.V1Beta1.DNSName();
            if (valueCase_ == ValueOneofCase.DnsNameValue) {
              subBuilder.MergeFrom(DnsNameValue);
            }
            input.ReadMessage(subBuilder);
            DnsNameValue = subBuilder;
            break;
          }
          case 82: {
            global::Istio.Policy.V1Beta1.Uri subBuilder = new global::Istio.Policy.V1Beta1.Uri();
            if (valueCase_ == ValueOneofCase.UriValue) {
              subBuilder.MergeFrom(UriValue);
            }
            input.ReadMessage(subBuilder);
            UriValue = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An instance field of type IPAddress denotes that the expression for the field must evalaute to
  /// [ValueType.IP_ADDRESS][istio.policy.v1beta1.ValueType.IP_ADDRESS]
  ///
  /// Objects of type IPAddress are also passed to the adapters during request-time for the instance fields of
  /// type IPAddress
  /// </summary>
  public sealed partial class IPAddress : pb::IMessage<IPAddress> {
    private static readonly pb::MessageParser<IPAddress> _parser = new pb::MessageParser<IPAddress>(() => new IPAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IPAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Istio.Policy.V1Beta1.TypeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IPAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IPAddress(IPAddress other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IPAddress Clone() {
      return new IPAddress(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    /// <summary>
    /// IPAddress encoded as bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IPAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IPAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IPAddress other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An instance field of type Duration denotes that the expression for the field must evalaute to
  /// [ValueType.DURATION][istio.policy.v1beta1.ValueType.DURATION]
  ///
  /// Objects of type Duration are also passed to the adapters during request-time for the instance fields of
  /// type Duration
  /// </summary>
  public sealed partial class Duration : pb::IMessage<Duration> {
    private static readonly pb::MessageParser<Duration> _parser = new pb::MessageParser<Duration>(() => new Duration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Duration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Istio.Policy.V1Beta1.TypeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Duration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Duration(Duration other) : this() {
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Duration Clone() {
      return new Duration(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Duration value_;
    /// <summary>
    /// Duration encoded as google.protobuf.Duration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Duration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Duration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (value_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Duration other) {
      if (other == null) {
        return;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (value_ == null) {
              value_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(value_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An instance field of type TimeStamp denotes that the expression for the field must evalaute to
  /// [ValueType.TIMESTAMP][istio.policy.v1beta1.ValueType.TIMESTAMP]
  ///
  /// Objects of type TimeStamp are also passed to the adapters during request-time for the instance fields of
  /// type TimeStamp
  /// </summary>
  public sealed partial class TimeStamp : pb::IMessage<TimeStamp> {
    private static readonly pb::MessageParser<TimeStamp> _parser = new pb::MessageParser<TimeStamp>(() => new TimeStamp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeStamp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Istio.Policy.V1Beta1.TypeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeStamp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeStamp(TimeStamp other) : this() {
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeStamp Clone() {
      return new TimeStamp(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp value_;
    /// <summary>
    /// TimeStamp encoded as google.protobuf.Timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeStamp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeStamp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (value_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeStamp other) {
      if (other == null) {
        return;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          value_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (value_ == null) {
              value_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(value_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An instance field of type DNSName denotes that the expression for the field must evalaute to
  /// [ValueType.DNS_NAME][istio.policy.v1beta1.ValueType.DNS_NAME]
  ///
  /// Objects of type DNSName are also passed to the adapters during request-time for the instance fields of
  /// type DNSName
  /// </summary>
  public sealed partial class DNSName : pb::IMessage<DNSName> {
    private static readonly pb::MessageParser<DNSName> _parser = new pb::MessageParser<DNSName>(() => new DNSName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DNSName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Istio.Policy.V1Beta1.TypeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DNSName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DNSName(DNSName other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DNSName Clone() {
      return new DNSName(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    /// <summary>
    /// DNSName encoded as string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DNSName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DNSName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DNSName other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DO NOT USE !! Under Development
  /// An instance field of type EmailAddress denotes that the expression for the field must evalaute to
  /// [ValueType.EMAIL_ADDRESS][istio.policy.v1beta1.ValueType.EMAIL_ADDRESS]
  ///
  /// Objects of type EmailAddress are also passed to the adapters during request-time for the instance fields of
  /// type EmailAddress
  /// </summary>
  public sealed partial class EmailAddress : pb::IMessage<EmailAddress> {
    private static readonly pb::MessageParser<EmailAddress> _parser = new pb::MessageParser<EmailAddress>(() => new EmailAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmailAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Istio.Policy.V1Beta1.TypeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailAddress(EmailAddress other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailAddress Clone() {
      return new EmailAddress(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    /// <summary>
    /// EmailAddress encoded as string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmailAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmailAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmailAddress other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DO NOT USE !! Under Development
  /// An instance field of type Uri denotes that the expression for the field must evalaute to
  /// [ValueType.URI][istio.policy.v1beta1.ValueType.URI]
  ///
  /// Objects of type Uri are also passed to the adapters during request-time for the instance fields of
  /// type Uri
  /// </summary>
  public sealed partial class Uri : pb::IMessage<Uri> {
    private static readonly pb::MessageParser<Uri> _parser = new pb::MessageParser<Uri>(() => new Uri());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Uri> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Istio.Policy.V1Beta1.TypeReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Uri() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Uri(Uri other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Uri Clone() {
      return new Uri(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    /// <summary>
    /// Uri encoded as string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Uri);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Uri other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Uri other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
